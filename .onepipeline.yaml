version: '1'

setup:
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image:2.12@sha256:ff4053b0bca784d6d105fee1d008cfb20db206011453071e86b69ca3fde706a4
  script: |
    #!/usr/bin/env bash
    set -x
    GH_TOKEN=$(cat "$WORKSPACE/git-token")
    OWNER=$(jq -r '.services[] | select(.toolchain_binding.name=="app-repo") | .parameters.owner_id' /toolchain/toolchain.json)
    REPO=$(jq -r '.services[] | select(.toolchain_binding.name=="app-repo") | .parameters.repo_name' /toolchain/toolchain.json)
    curl -u ":$GH_TOKEN" https://github.ibm.com/api/v3/repos/$OWNER/$REPO/branches/master/protection -XPUT -d '{"required_pull_request_reviews":{"dismiss_stale_reviews":true},"required_status_checks":{"strict":true,"contexts":["tekton/code-branch-protection","tekton/code-unit-tests","tekton/code-cis-check","tekton/code-vulnerability-scan","tekton/code-detect-secrets"]},"enforce_admins":null,"restrictions":null}'
    #npm ci
    env
    ls $WORKSPACE
    oc login $(get_env openshift_cluster) -u $(get_env admin_user) -p $(get_env admin_pw) --insecure-skip-tls-verify=true
    oc project m4d-ci
    oc delete pipelinerun --all
    kubectl get po -o wide
    echo "secret=$(get_env one-pipeline-dockerconfigjson)" > /tmp/secret.yaml
    cat /tmp/secret.yaml
#    kubectl create configmap -n m4d-ci orig-regcred --from-file=/tmp/secret.yaml
test:
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image:2.12@sha256:ff4053b0bca784d6d105fee1d008cfb20db206011453071e86b69ca3fde706a4
  script: |
    #!/usr/bin/env bash
    #cd ../"$(load_repo app-repo path)"
    #npm ci
    #npm test
    set -x
    env
    ls $WORKSPACE
    oc login $(get_env openshift_cluster) -u $(get_env admin_user) -p $(get_env admin_pw) --insecure-skip-tls-verify=true
    oc project m4d-ci
    kubectl get po -o wide
containerize:
  dind: true
  image: wcp-ibm-streams-docker-local.artifactory.swg-devops.com/elvis_build/suede:latest
  script: |
    #!/bin/bash
    set -x
    if [[ "$PIPELINE_DEBUG" == 1 ]]; then
      trap env EXIT
      env
      set -x
    fi
    #source scripts/build_setup.sh
    #source scripts/build.sh
    env
    ls $WORKSPACE
    oc login $(get_env openshift_cluster) -u $(get_env admin_user) -p $(get_env admin_pw) --insecure-skip-tls-verify=true
    set +e
    oc new-project m4d-ci
    oc delete pipelinerun --all --wait
    set -e
    run_tkn=$(get_env run_tkn) GH_TOKEN=$(get_env different-git-token) git_user=$(get_env git-user) image_repo=$(get_env push_registry) bash -x pipeline/bootstrap-pipeline.sh m4d-ci
    kubectl get po -o wide
    . pipeline/common_functions.sh
    cat > ${TMP}/streams_csv_check_script.sh <<EOH
    #!/bin/bash
    set -x
    oc get pipelinerun --no-headers
    oc get pipelinerun --no-headers | grep -e Failed -e Succeeded
    EOH
    chmod u+x ${TMP}/streams_csv_check_script.sh
    try_command "${TMP}/streams_csv_check_script.sh"  40 true 5
    pipelinerun=$(oc get pipelinerun --no-headers | cut -d' ' -f1)
    oc get pipelinerun $pipelinerun -o yaml > /tmp/details
    cat /tmp/details
    images=$(yq r /tmp/details 'status.taskRuns[*].status.taskResults' | grep FULL_IMAGE -A1 | grep value: | cut -d' ' -f6)
    for i in $images
    do
        save_artifact service type=image name="$(echo $i | cut -d'@' -f1)" digest="$(echo $i | cut -d'@' -f2)" tags="latest"
    done
    for i in $images
    do
        save_artifact service_debug type=image name="$(echo $i | cut -d'@' -f1)" digest="$(echo $i | cut -d'@' -f2)"
    done 
deploy:
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image:2.12@sha256:ff4053b0bca784d6d105fee1d008cfb20db206011453071e86b69ca3fde706a4
  script: |
    #!/usr/bin/env bash
    if [[ "$PIPELINE_DEBUG" == 1 ]]; then
      trap env EXIT
      env
      set -x
    fi
    #source scripts/deploy_setup.sh
    #source scripts/deploy.sh
    env
    ls $WORKSPACE
    oc login $(get_env openshift_cluster) -u $(get_env admin_user) -p $(get_env admin_pw) --insecure-skip-tls-verify=true
    kubectl get po -o wide
    kubectl get po -o wide
acceptance-test:
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image:2.12@sha256:ff4053b0bca784d6d105fee1d008cfb20db206011453071e86b69ca3fde706a4
  script: |
    #!/usr/bin/env bash
    #source /root/.nvm/nvm.sh
    #npm ci
    #export APP_URL=$(cat ../app-url)
    #npm run acceptance-test
    env
    ls $WORKSPACE
    oc login $(get_env openshift_cluster) -u $(get_env admin_user) -p $(get_env admin_pw) --insecure-skip-tls-verify=true
    kubectl get po -o wide
release:
  abort_on_failure: false
  image: wcp-compliance-automation-team-docker-local.artifactory.swg-devops.com/ibm-compliance-automation:1.2.4@sha256:dc98cc52c0caede42149c08727147520e30e81fee543b8dd5939b45d06baa142
  script: |
    #!/usr/bin/env bash
    #source scripts/release.sh
    env
    ls $WORKSPACE
    oc login ${openshift_cluster} -u ${admin_user} -p ${admin_pw} --insecure-skip-tls-verify=true
    kubectl get po -o wide
