apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: skopeo copy
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: cli
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/provider-type: redhat
  name: skopeo-copy
spec:
  description: |-
    Skopeo is a command line tool for working with remote image registries.
    Skopeo doesnâ€™t require a daemon to be running while performing its operations. In particular, the handy skopeo command called copy will ease the whole image copy operation. The copy command will take care of copying the image from internal.registry to production.registry. If your production registry requires credentials to login in order to push the image, skopeo can handle that as well.
  params:
  - default: ""
    description: URL of the image to be copied to the destination registry
    name: srcImageURL
    type: string
  - default: ""
    description: URL of the image where the image from source should be copied to
    name: destImageURL
    type: string
  - default: "true"
    description: Verify the TLS on the src registry endpoint
    name: srcTLSverify
    type: string
  - default: "true"
    description: Verify the TLS on the dest registry endpoint
    name: destTLSverify
    type: string
  steps:
  - image: quay.io/skopeo/stable:v1.1.1
    name: skopeo-copy
    resources: {}
    script: |
      # Function to copy multiple images.
      #
      copyimages() {
        filename='$(workspaces.images-url.path)/url.txt'
        while IFS= read line || [ -n "$line" ]
        do
          cmd=""
          for url in $line
          do
            # echo $url
            cmd="$cmd \
                $url"
          done
          skopeo copy $cmd --src-tls-verify=$(params.srcTLSverify) --dest-tls-verify=$(params.destTLSverify)
          echo $cmd
        done < "$filename"
      }
      #
      # If single image is to be copied then, it can be passed through
      # params in the taskrun.
      if [ "$(params.srcImageURL)" != "" ] && [ "$(params.destImageURL)" != "" ] ; then
        skopeo copy "$(params.srcImageURL)" "$(params.destImageURL)" --src-tls-verify=$(params.srcTLSverify) --dest-tls-verify=$(params.destTLSverify)
      else
        # If file is provided as a configmap in the workspace then multiple images can be copied.
        #
        copyimages
      fi
  workspaces:
  - name: images-url
